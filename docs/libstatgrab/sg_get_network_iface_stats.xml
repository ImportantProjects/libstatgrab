<?xml version="1.0"?>

<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<refentry id="sg_get_network_iface_stats">

  <refentryinfo>
    <date>$Date$</date>
    <releaseinfo>$Id$</releaseinfo>
  </refentryinfo>

  <refmeta>
    <refentrytitle>sg_get_network_iface_stats</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>i-scream</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>sg_get_network_iface_stats</refname>
    <refpurpose>get network interface statistics</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;statgrab.h&gt;</funcsynopsisinfo>
      <funcprototype>
        <funcdef>sg_network_iface_stats *<function>sg_get_network_iface_stats</function></funcdef>
        <paramdef>int *<parameter>entries</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para>
      The <function>sg_get_network_iface_stats</function> function
      takes a pointer to an int, <parameter>entries</parameter>,
      which is filled with the number of network interfaces the
      machine has. This is needed to know how many
      <structname>sg_network_iface_stats</structname> structures have
      been returned. A pointer is returned to the first
      <structname>sg_network_iface_stats</structname>.
    </para>
    <para>
      <function>sg_get_network_iface_stats</function> returns statistics
      about the network interfaces in the machine. Specifically,
      it returns the speed of the interface, the duplex state, and
      whether it is currently up.
    </para>
  </refsect1>

  <refsect1>
    <title>Return Values</title>

    <para>
      The <function>sg_get_network_iface_stats</function> returns a
      pointer to a structure of type
      <structname>sg_network_iface_stats</structname>.
    </para>

    <programlisting>
typedef enum{
        SG_IFACE_DUPLEX_FULL,
        SG_IFACE_DUPLEX_HALF,
        SG_IFACE_DUPLEX_UNKNOWN
}sg_iface_duplex;
    </programlisting>

    <para>
      Note: The <structfield>SG_IFACE_DUPLEX_UNKNOWN</structfield>
      value could mean that duplex hasn't been negotiated yet.
    </para>

    <programlisting>
typedef struct{
        char *interface_name;
        int speed;
        sg_iface_duplex duplex;
        int up;
}sg_network_iface_stats;
    </programlisting>

    <variablelist>
      <varlistentry>
        <term>
          <structfield>interface_name</structfield>
        </term>
        <listitem>
          <para>
            The name known to the operating system.
            (eg. on linux it might be eth0)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>speed</structfield>
        </term>
        <listitem>
          <para>
            The speed of the interface, in megabits/sec.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>duplex</structfield>
        </term>
        <listitem>
          <para>
            The duplex state the interface is in. See sg_iface_duplex
            for permitted values.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>up</structfield>
        </term>
        <listitem>
          <para>
            Whether the interface is up.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <simplelist type="inline">
      <member>
        <citerefentry>
          <refentrytitle>statgrab</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
      </member>
    </simplelist>
  </refsect1>

  <refsect1>
    <title>Website</title>

    <simplelist type="vert">
      <member>
        <ulink url="http://www.i-scream.org/libstatgrab/">
          http://www.i-scream.org/libstatgrab/
        </ulink>
      </member>
    </simplelist>
  </refsect1>

</refentry>

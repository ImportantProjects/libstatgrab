<?xml version="1.0"?>

<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<refentry id="get_memory_stats">

  <refentryinfo>
    <date>$Date$</date>
    <releaseinfo>$Id$</releaseinfo>
  </refentryinfo>
  
  <refmeta>
    <refentrytitle>get_memory_stats</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>i-scream</refmiscinfo>
  </refmeta>
  
  <refnamediv>
    <refname>get_memory_stats</refname>
    <refname>get_swap_stats</refname>
    <refpurpose>get VM statistics</refpurpose>
  </refnamediv>
    
  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;statgrab.h&gt;</funcsynopsisinfo>
      <funcprototype>
        <funcdef>mem_stat_t *<function>get_memory_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>swap_stat_t *<function>get_swap_stats</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
    
  <refsect1>
    <title>Description</title>
    <para>
      Memory statistics are accessed through the
      <function>get_memory_stats</function> function. It returns a
      pointer to a static <structname>mem_stat_t</structname>.
    </para>
    <para>
      The <function>get_swap_stats</function> returns returns swap
      statistics. It returns a pointer to a static
      <structname>swap_stat_t</structname>.
    </para>
    <para>
      On the FreeBSD operating system elevated privileges are required
      to access the swap statistics. Making the program setgid kmem
      should be sufficient. Programs running as root will not have this
      problem.
    </para>
  </refsect1>
  
  <refsect1>
    <title>Return Values</title>

    <para>
      The VM system calls can return a pointer to either a
      <structname>mem_stat_t</structname> or a
      <structname>swap_stat_t</structname>.
    </para>

    <programlisting>
typedef struct{
        long long total;
        long long free;
        long long used;
        long long cache;
}mem_stat_t;
    </programlisting>

    <variablelist>
      <varlistentry>
        <term>
          <structfield>total</structfield>
        </term>
        <listitem>
          <para>
            The total amount of memory in bytes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>free</structfield>
        </term>
        <listitem>
          <para>
            The total free memory in bytes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>used</structfield>
        </term>
        <listitem>
          <para>
            The total used memory in bytes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <structfield>cache</structfield>
        </term>
        <listitem>
          <para>
            The amount of cache used in bytes.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <programlisting>
typedef struct{
        long long total;
        long long used;
        long long free;
}swap_stat_t;
    </programlisting>

    <variablelist>
      <varlistentry>
        <term>
          <structfield>total</structfield>
        </term> 
        <listitem>
          <para> 
            The total swap space in bytes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>     
          <structfield>used</structfield>
        </term> 
        <listitem>
          <para> 
            The used swap in bytes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>     
          <structfield>free</structfield>
        </term>                       
        <listitem>                    
          <para> 
            The free swap in bytes.
          </para>         
        </listitem>       
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Todo</title>
    <para>
      Add a function to hold open the file descriptor to the kernel
      memory structures. Doing this would allow the elevated privileges
      to be dropped early on.
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <simplelist type="inline">
      <member>
        <citerefentry>
          <refentrytitle>statgrab</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
      </member>
    </simplelist>
  </refsect1>
  
  <refsect1>
    <title>Website</title>
    
    <simplelist type="vert">
      <member>
        <ulink url="http://www.i-scream.org/libstatgrab/">
          http://www.i-scream.org/libstatgrab/
        </ulink>
      </member>
    </simplelist>
  </refsect1>

</refentry>

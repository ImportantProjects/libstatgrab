Network Statistics
==================

$Id$

Data Structure
--------------

All network statistics return a structure of type network_stat_t that
looks like this:

typedef struct{
        char *interface_name;
        long long tx;
        long long rx;
        time_t systime;
}network_stat_t;

interface_name	is the name know to the operating system.
		(eg. on linux is might be eth0)
tx		is the number of bytes transmitted.
rx		is the number of bytes received.
sysname		is the time period over which tx and rx were
		transferred.

Functions
---------

network_stat_t *get_network_stats(int *entries);

network_stat_t *get_network_stats_diff(int *entries);

Both calls take a pointer to an int, "entries", which is filled with
the number of network interfaces the machine has. This is needed to
know how many network_stat_t structures have been returned. A pointer
is returned to the first network_stat_t.

get_network_stats returns the network traffic stored in the kernel
which holds the amount of data transferred since bootup. On some
platforms, such as Solaris 7, this value is stored in a 32bit int, so
wraps around when it reaches 4GB. Other platforms, such as Solaris 8,
hold the value in a 64bit int, which wraps somewhere near 17 million
terabytes.

get_network_stats_diff is the same as get_network_stats except it will 
return the difference since the last call. So, for instance a call to 
get_network_stats_diff is made, and called again 5 seconds later. Over that 
time, 20 bytes of traffic was transmitted and 10 bytes received. Tx will 
store 20, rx will store 10 and systime will store 5. This function copes 
with wrap arounds by the O/S so should be seemless to use.

Bugs
----

On the very first call get_network_stats_diff will return the same as
get_network_stats. After the first call it will always return the
difference.

On operating system that hold only 32bits of data there is a problem if
the values wrap twice. For example, on Solaris 7 if 9GB is transferred
and the operating system wraps at 4GB, the get_network_stats_diff
function will return 5GB.

Example
-------

A very basic example can be found in examples/network_traffic.c
